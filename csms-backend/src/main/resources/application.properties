# Spring Boot Actuator (optional, but good for health checks)
management.endpoints.web.exposure.include=health,info

# Database Configuration for PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/csms
spring.datasource.username=your_db_user # Replace with your PostgreSQL username
spring.datasource.password=your_db_password # Replace with your PostgreSQL password
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA Configuration
spring.jpa.hibernate.ddl-auto=update # Automatically update schema. Use 'validate' or 'none' in production.
spring.jpa.show-sql=true # Show SQL queries in logs, useful for debugging
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true # Format SQL in logs

# Server port (optional, defaults to 8080)
# server.port=8081

# Jackson properties (optional, for date formatting etc.)
spring.jackson.serialization.write-dates-as-timestamps=false
# spring.jackson.date-format=yyyy-MM-dd'T'HH:mm:ss.SSSXXX # Example ISO 8601 format

# Spring Security (basic setup, will be expanded)
# spring.security.user.name=user # Default in-memory user (for testing only)
# spring.security.user.password=password # Default in-memory user password (for testing only)

# JWT Configuration
# IMPORTANT: Change app.jwt.secret in a production environment to a strong, random string (at least 256 bits / 32 chars for HS256, 512 bits / 64 chars for HS512)
# You can generate one using: openssl rand -hex 32 (for HS256) or openssl rand -hex 64 (for HS512)
app.jwt.secret=DefaultSecretKeyShouldBeChangedForProductionEnvironmentItNeedsToBeLongAndComplexEnough # Replace in production
app.jwt.expirationMs=86400000 # 24 hours in milliseconds

# File upload configuration (optional, can be tuned)
# spring.servlet.multipart.max-file-size=10MB
# spring.servlet.multipart.max-request-size=10MB
