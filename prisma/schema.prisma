// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  
  name          String
  username      String   @unique
  password      String
  role          String
  active        Boolean  @default(true)
  employeeId    String?  @unique
  
  institutionId String
  institution   Institution @relation(fields: [institutionId], references: [id])

  complaintsSubmitted    Complaint[] @relation("ComplaintSubmittedBy")
  complaintsReviewed     Complaint[] @relation("ComplaintReviewedBy")
  complaintsForEmployee  Complaint[] @relation("ComplaintEmployee")

  confirmationRequestsSubmitted  ConfirmationRequest[] @relation("ConfirmationSubmittedBy")
  confirmationRequestsReviewed   ConfirmationRequest[] @relation("ConfirmationReviewedBy")
  confirmationRequestsForEmployee ConfirmationRequest[] @relation("ConfirmationEmployee")

  promotionRequestsSubmitted   PromotionRequest[] @relation("PromotionSubmittedBy")
  promotionRequestsReviewed    PromotionRequest[] @relation("PromotionReviewedBy")
  promotionRequestsForEmployee PromotionRequest[] @relation("PromotionEmployee")

  @@index([institutionId])
}

model Institution {
  id    String @id @default(cuid())
  name  String @unique
  users User[]
}

model Complaint {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt
  
  complainantId   String
  complainant     User     @relation("ComplaintEmployee", fields: [complainantId], references: [id])
  
  reviewedById    String?
  reviewedBy      User?    @relation("ComplaintReviewedBy", fields: [reviewedById], references: [id])

  complaintType   String
  subject         String
  details         String   @db.Text
  status          String
  reviewStage     String
  
  complainantPhoneNumber String
  nextOfKinPhoneNumber   String
  attachments            String[]
  
  officerComments   String?
  internalNotes     String?
  rejectionReason   String?
  assignedOfficerRole String?
  
  @@index([complainantId])
  @@index([reviewedById])
}

model ConfirmationRequest {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  employeeId      String
  employee        User     @relation("ConfirmationEmployee", fields: [employeeId], references: [id])
  
  submittedById   String
  submittedBy     User     @relation("ConfirmationSubmittedBy", fields: [submittedById], references: [id])

  reviewedById    String?
  reviewedBy      User?    @relation("ConfirmationReviewedBy", fields: [reviewedById], references: [id])
  
  status                 String
  reviewStage            String
  rejectionReason        String?
  documents              String[]
  decisionDate           DateTime?
  commissionDecisionDate DateTime?

  @@index([employeeId])
  @@index([submittedById])
  @@index([reviewedById])
}

enum PromotionType {
  Experience
  EducationAdvancement
}

model PromotionRequest {
  id              String   @id @default(cuid())
  createdAt       DateTime @default(now())
  updatedAt       DateTime @updatedAt

  employeeId      String
  employee        User     @relation("PromotionEmployee", fields: [employeeId], references: [id])
  
  submittedById   String
  submittedBy     User     @relation("PromotionSubmittedBy", fields: [submittedById], references: [id])

  reviewedById    String?
  reviewedBy      User?    @relation("PromotionReviewedBy", fields: [reviewedById], references: [id])
  
  status          String // e.g., 'Pending HHRMD Review', 'Approved by Commission'
  reviewStage     String // e.g., 'initial', 'commission_review', 'completed'
  rejectionReason String?
  
  proposedCadre            String
  promotionType            PromotionType
  documents                String[]
  studiedOutsideCountry    Boolean?

  @@index([employeeId])
  @@index([submittedById])
  @@index([reviewedById])
}
